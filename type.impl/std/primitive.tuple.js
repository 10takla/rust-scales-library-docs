(function() {var type_impls = {
"rust_scales_lib":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BelongingToDsl%3C(%26%5BParent%5D,+%26%5BParent%5D)%3E-for-Child\" class=\"impl\"><a href=\"#impl-BelongingToDsl%3C(%26%5BParent%5D,+%26%5BParent%5D)%3E-for-Child\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Parent, Child&gt; BelongingToDsl&lt;(&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.slice.html\">[Parent]</a>, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.slice.html\">[Parent]</a>)&gt; for Child<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;'a Parent</a>: Identifiable,\n    Child: HasTable + BelongsTo&lt;Parent&gt;,\n    <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;'a Parent</a> as Identifiable&gt;::Id&gt;: AsInExpression&lt;&lt;&lt;Child as BelongsTo&lt;Parent&gt;&gt;::ForeignKeyColumn as Expression&gt;::SqlType&gt;,\n    &lt;Child as HasTable&gt;::Table: FilterDsl&lt;Grouped&lt;In&lt;&lt;Child as BelongsTo&lt;Parent&gt;&gt;::ForeignKeyColumn, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;'a Parent</a> as Identifiable&gt;::Id&gt; as AsInExpression&lt;&lt;&lt;Child as BelongsTo&lt;Parent&gt;&gt;::ForeignKeyColumn as Expression&gt;::SqlType&gt;&gt;::InExpression&gt;&gt;&gt;,\n    &lt;Child as BelongsTo&lt;Parent&gt;&gt;::ForeignKeyColumn: ExpressionMethods,\n    &lt;&lt;Child as BelongsTo&lt;Parent&gt;&gt;::ForeignKeyColumn as Expression&gt;::SqlType: SqlType,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Output</a> = &lt;&lt;Child as HasTable&gt;::Table as FilterDsl&lt;Grouped&lt;In&lt;&lt;Child as BelongsTo&lt;Parent&gt;&gt;::ForeignKeyColumn, &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;'a Parent</a> as Identifiable&gt;::Id&gt; as AsInExpression&lt;&lt;&lt;Child as BelongsTo&lt;Parent&gt;&gt;::ForeignKeyColumn as Expression&gt;::SqlType&gt;&gt;::InExpression&gt;&gt;&gt;&gt;::Output</h4></section></summary><div class='docblock'>The query returned by <code>belonging_to</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.belonging_to\" class=\"method trait-impl\"><a href=\"#method.belonging_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">belonging_to</a>(\n    parents: (&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.slice.html\">[Parent]</a>, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.slice.html\">[Parent]</a>),\n) -&gt; &lt;Child as BelongingToDsl&lt;(&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.slice.html\">[Parent]</a>, &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.slice.html\">[Parent]</a>)&gt;&gt;::Output</h4></section></summary><div class='docblock'>Get the record(s) belonging to record(s) <code>other</code></div></details></div></details>","BelongingToDsl<(&'a [Parent], &'a [Parent])>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0,)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0,)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + HasSqlType&lt;T20&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + HasSqlType&lt;T20&gt; + HasSqlType&lt;T21&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + HasSqlType&lt;T20&gt; + HasSqlType&lt;T21&gt; + HasSqlType&lt;T22&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + HasSqlType&lt;T20&gt; + HasSqlType&lt;T21&gt; + HasSqlType&lt;T22&gt; + HasSqlType&lt;T23&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + HasSqlType&lt;T20&gt; + HasSqlType&lt;T21&gt; + HasSqlType&lt;T22&gt; + HasSqlType&lt;T23&gt; + HasSqlType&lt;T24&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + HasSqlType&lt;T20&gt; + HasSqlType&lt;T21&gt; + HasSqlType&lt;T22&gt; + HasSqlType&lt;T23&gt; + HasSqlType&lt;T24&gt; + HasSqlType&lt;T25&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + HasSqlType&lt;T20&gt; + HasSqlType&lt;T21&gt; + HasSqlType&lt;T22&gt; + HasSqlType&lt;T23&gt; + HasSqlType&lt;T24&gt; + HasSqlType&lt;T25&gt; + HasSqlType&lt;T26&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + HasSqlType&lt;T20&gt; + HasSqlType&lt;T21&gt; + HasSqlType&lt;T22&gt; + HasSqlType&lt;T23&gt; + HasSqlType&lt;T24&gt; + HasSqlType&lt;T25&gt; + HasSqlType&lt;T26&gt; + HasSqlType&lt;T27&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + HasSqlType&lt;T20&gt; + HasSqlType&lt;T21&gt; + HasSqlType&lt;T22&gt; + HasSqlType&lt;T23&gt; + HasSqlType&lt;T24&gt; + HasSqlType&lt;T25&gt; + HasSqlType&lt;T26&gt; + HasSqlType&lt;T27&gt; + HasSqlType&lt;T28&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28,+T29)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28,+T29)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + HasSqlType&lt;T20&gt; + HasSqlType&lt;T21&gt; + HasSqlType&lt;T22&gt; + HasSqlType&lt;T23&gt; + HasSqlType&lt;T24&gt; + HasSqlType&lt;T25&gt; + HasSqlType&lt;T26&gt; + HasSqlType&lt;T27&gt; + HasSqlType&lt;T28&gt; + HasSqlType&lt;T29&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28,+T29,+T30)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28,+T29,+T30)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + HasSqlType&lt;T20&gt; + HasSqlType&lt;T21&gt; + HasSqlType&lt;T22&gt; + HasSqlType&lt;T23&gt; + HasSqlType&lt;T24&gt; + HasSqlType&lt;T25&gt; + HasSqlType&lt;T26&gt; + HasSqlType&lt;T27&gt; + HasSqlType&lt;T28&gt; + HasSqlType&lt;T29&gt; + HasSqlType&lt;T30&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28,+T29,+T30,+T31)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-HasSqlType%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28,+T29,+T30,+T31)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, __DB&gt; HasSqlType&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31)</a>&gt; for __DB<div class=\"where\">where\n    __DB: HasSqlType&lt;T0&gt; + HasSqlType&lt;T1&gt; + HasSqlType&lt;T2&gt; + HasSqlType&lt;T3&gt; + HasSqlType&lt;T4&gt; + HasSqlType&lt;T5&gt; + HasSqlType&lt;T6&gt; + HasSqlType&lt;T7&gt; + HasSqlType&lt;T8&gt; + HasSqlType&lt;T9&gt; + HasSqlType&lt;T10&gt; + HasSqlType&lt;T11&gt; + HasSqlType&lt;T12&gt; + HasSqlType&lt;T13&gt; + HasSqlType&lt;T14&gt; + HasSqlType&lt;T15&gt; + HasSqlType&lt;T16&gt; + HasSqlType&lt;T17&gt; + HasSqlType&lt;T18&gt; + HasSqlType&lt;T19&gt; + HasSqlType&lt;T20&gt; + HasSqlType&lt;T21&gt; + HasSqlType&lt;T22&gt; + HasSqlType&lt;T23&gt; + HasSqlType&lt;T24&gt; + HasSqlType&lt;T25&gt; + HasSqlType&lt;T26&gt; + HasSqlType&lt;T27&gt; + HasSqlType&lt;T28&gt; + HasSqlType&lt;T29&gt; + HasSqlType&lt;T30&gt; + HasSqlType&lt;T31&gt; + Backend,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">metadata</a>(\n    _: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n) -&gt; &lt;__DB as TypeMetadata&gt;::TypeMetadata</h4></section></summary><div class='docblock'>Fetch the metadata for the given type <a>Read more</a></div></details></div></details>","HasSqlType<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; MultiUnzip&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0,)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0,)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt; + QueryMetadata&lt;T20&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt; + QueryMetadata&lt;T20&gt; + QueryMetadata&lt;T21&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt; + QueryMetadata&lt;T20&gt; + QueryMetadata&lt;T21&gt; + QueryMetadata&lt;T22&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt; + QueryMetadata&lt;T20&gt; + QueryMetadata&lt;T21&gt; + QueryMetadata&lt;T22&gt; + QueryMetadata&lt;T23&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt; + QueryMetadata&lt;T20&gt; + QueryMetadata&lt;T21&gt; + QueryMetadata&lt;T22&gt; + QueryMetadata&lt;T23&gt; + QueryMetadata&lt;T24&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt; + QueryMetadata&lt;T20&gt; + QueryMetadata&lt;T21&gt; + QueryMetadata&lt;T22&gt; + QueryMetadata&lt;T23&gt; + QueryMetadata&lt;T24&gt; + QueryMetadata&lt;T25&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt; + QueryMetadata&lt;T20&gt; + QueryMetadata&lt;T21&gt; + QueryMetadata&lt;T22&gt; + QueryMetadata&lt;T23&gt; + QueryMetadata&lt;T24&gt; + QueryMetadata&lt;T25&gt; + QueryMetadata&lt;T26&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt; + QueryMetadata&lt;T20&gt; + QueryMetadata&lt;T21&gt; + QueryMetadata&lt;T22&gt; + QueryMetadata&lt;T23&gt; + QueryMetadata&lt;T24&gt; + QueryMetadata&lt;T25&gt; + QueryMetadata&lt;T26&gt; + QueryMetadata&lt;T27&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt; + QueryMetadata&lt;T20&gt; + QueryMetadata&lt;T21&gt; + QueryMetadata&lt;T22&gt; + QueryMetadata&lt;T23&gt; + QueryMetadata&lt;T24&gt; + QueryMetadata&lt;T25&gt; + QueryMetadata&lt;T26&gt; + QueryMetadata&lt;T27&gt; + QueryMetadata&lt;T28&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28,+T29)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28,+T29)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt; + QueryMetadata&lt;T20&gt; + QueryMetadata&lt;T21&gt; + QueryMetadata&lt;T22&gt; + QueryMetadata&lt;T23&gt; + QueryMetadata&lt;T24&gt; + QueryMetadata&lt;T25&gt; + QueryMetadata&lt;T26&gt; + QueryMetadata&lt;T27&gt; + QueryMetadata&lt;T28&gt; + QueryMetadata&lt;T29&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28,+T29,+T30)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28,+T29,+T30)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt; + QueryMetadata&lt;T20&gt; + QueryMetadata&lt;T21&gt; + QueryMetadata&lt;T22&gt; + QueryMetadata&lt;T23&gt; + QueryMetadata&lt;T24&gt; + QueryMetadata&lt;T25&gt; + QueryMetadata&lt;T26&gt; + QueryMetadata&lt;T27&gt; + QueryMetadata&lt;T28&gt; + QueryMetadata&lt;T29&gt; + QueryMetadata&lt;T30&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28,+T29,+T30,+T31)%3E-for-__DB\" class=\"impl\"><a href=\"#impl-QueryMetadata%3C(T0,+T1,+T2,+T3,+T4,+T5,+T6,+T7,+T8,+T9,+T10,+T11,+T12,+T13,+T14,+T15,+T16,+T17,+T18,+T19,+T20,+T21,+T22,+T23,+T24,+T25,+T26,+T27,+T28,+T29,+T30,+T31)%3E-for-__DB\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, __DB&gt; QueryMetadata&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.tuple.html\">(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31)</a>&gt; for __DB<div class=\"where\">where\n    __DB: Backend + QueryMetadata&lt;T0&gt; + QueryMetadata&lt;T1&gt; + QueryMetadata&lt;T2&gt; + QueryMetadata&lt;T3&gt; + QueryMetadata&lt;T4&gt; + QueryMetadata&lt;T5&gt; + QueryMetadata&lt;T6&gt; + QueryMetadata&lt;T7&gt; + QueryMetadata&lt;T8&gt; + QueryMetadata&lt;T9&gt; + QueryMetadata&lt;T10&gt; + QueryMetadata&lt;T11&gt; + QueryMetadata&lt;T12&gt; + QueryMetadata&lt;T13&gt; + QueryMetadata&lt;T14&gt; + QueryMetadata&lt;T15&gt; + QueryMetadata&lt;T16&gt; + QueryMetadata&lt;T17&gt; + QueryMetadata&lt;T18&gt; + QueryMetadata&lt;T19&gt; + QueryMetadata&lt;T20&gt; + QueryMetadata&lt;T21&gt; + QueryMetadata&lt;T22&gt; + QueryMetadata&lt;T23&gt; + QueryMetadata&lt;T24&gt; + QueryMetadata&lt;T25&gt; + QueryMetadata&lt;T26&gt; + QueryMetadata&lt;T27&gt; + QueryMetadata&lt;T28&gt; + QueryMetadata&lt;T29&gt; + QueryMetadata&lt;T30&gt; + QueryMetadata&lt;T31&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.row_metadata\" class=\"method trait-impl\"><a href=\"#method.row_metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">row_metadata</a>(\n    lookup: &amp;mut &lt;__DB as TypeMetadata&gt;::MetadataLookup,\n    row: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;__DB as TypeMetadata&gt;::TypeMetadata&gt;&gt;,\n)</h4></section></summary><div class='docblock'>The exact return value of this function is considered to be a\nbackend specific implementation detail. You should not rely on those\nvalues if you not own the corresponding backend</div></details></div></details>","QueryMetadata<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31)>","rust_scales_lib::model::dto::category::scheme::category::SqlType","rust_scales_lib::model::dto::label_template_short::scheme::label_template::SqlType","rust_scales_lib::model::dto::lot_of_product::scheme::lot_of_product::SqlType","rust_scales_lib::model::dto::message::scheme::message::SqlType","rust_scales_lib::model::dto::product::scheme::product::SqlType","rust_scales_lib::model::dto::product_rate::scheme::product_rate::SqlType","rust_scales_lib::model::other_scheme::android_metadata::SqlType","rust_scales_lib::model::other_scheme::font::SqlType","rust_scales_lib::model::other_scheme::font_style::SqlType","rust_scales_lib::model::other_scheme::global_text::SqlType","rust_scales_lib::model::other_scheme::group::SqlType","rust_scales_lib::model::other_scheme::item_barcode::SqlType","rust_scales_lib::model::other_scheme::item_datamatrix::SqlType","rust_scales_lib::model::other_scheme::item_global_text::SqlType","rust_scales_lib::model::other_scheme::item_graphic::SqlType","rust_scales_lib::model::other_scheme::item_image::SqlType","rust_scales_lib::model::other_scheme::item_special_text::SqlType","rust_scales_lib::model::other_scheme::item_text::SqlType","rust_scales_lib::model::other_scheme::label_image::SqlType","rust_scales_lib::model::other_scheme::label_item::SqlType","rust_scales_lib::model::other_scheme::log::SqlType","rust_scales_lib::model::other_scheme::marking::SqlType","rust_scales_lib::model::other_scheme::packer::SqlType","rust_scales_lib::model::other_scheme::pretrained::SqlType","rust_scales_lib::model::other_scheme::recognition_system::SqlType","rust_scales_lib::model::other_scheme::role::SqlType","rust_scales_lib::model::other_scheme::room_master_table::SqlType","rust_scales_lib::model::other_scheme::setting::SqlType","rust_scales_lib::model::other_scheme::user::SqlType"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()